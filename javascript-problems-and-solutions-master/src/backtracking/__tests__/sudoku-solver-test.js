import { assert } from 'chai';
import solveSudoku from '../sudoku-solver';

describe('Solve Sodoku', () => {
  const testCases = [
    [
      [
        ['.', '.', '9', '7', '4', '8', '.', '.', '.'],
        ['7', '.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '2', '.', '1', '.', '9', '.', '.', '.'],
        ['.', '.', '7', '.', '.', '.', '2', '4', '.'],
        ['.', '6', '4', '.', '1', '.', '5', '9', '.'],
        ['.', '9', '8', '.', '.', '.', '3', '.', '.'],
        ['.', '.', '.', '8', '.', '3', '.', '2', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.', '6'],
        ['.', '.', '.', '2', '7', '5', '9', '.', '.'],
      ],
      [
        ['5', '1', '9', '7', '4', '8', '6', '3', '2'],
        ['7', '8', '3', '6', '5', '2', '4', '1', '9'],
        ['4', '2', '6', '1', '3', '9', '8', '7', '5'],
        ['3', '5', '7', '9', '8', '6', '2', '4', '1'],
        ['2', '6', '4', '3', '1', '7', '5', '9', '8'],
        ['1', '9', '8', '5', '2', '4', '3', '6', '7'],
        ['9', '7', '5', '8', '6', '3', '1', '2', '4'],
        ['8', '3', '2', '4', '9', '1', '7', '5', '6'],
        ['6', '4', '1', '2', '7', '5', '9', '8', '3'],
      ],
    ],
  ];

  testCases.forEach((testCase, index) => {
    it(`should solve sodoku ${index}`, () => {
      const board = testCase[0];
      const expected = testCase[1];
      solveSudoku(board);
      assert.deepEqual(board, expected);
    });
  });
});
