{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "m8L8PgCTxAbBbnuYf",
  "code": "function subset(arr1, arr2) {\n  \n}",
  "difficulty": "Medium",
  "instructions": "<p><span>Array </span><em><span>A</span></em><span> is </span><strong><span>contained inside</span></strong><span> array </span><em><span>B</span></em><span> if each element in </span><em><span>A</span></em><span> also exists in </span><em><span>B</span></em><span>. </span></p><p><span>The number of times a number is present doesn't matter. In other words, if we transformed both arrays into sets, </span><em><span>A</span></em><span> would be a subset of </span><em><span>B</span></em><span>.</span></p><pre><code>A = [3, 3, 9, 9, 9, 5]\nB = [1, 3, 9, 5, 8, 44, 44]\n\nA_Set = [3, 9, 5]\nB_Set = [1, 3, 9, 5, 8, 44]\n\n// A_Set is a subset of B_Set</code></pre><p><span>Create a function that determines with the first array is a subset of the second.</span></p><h3><span>Examples</span></h3><pre><code>subset([1, 3], [1, 3, 3, 5]) \u279e true\n\nsubset([4, 8, 7], [7, 4, 4, 4, 9, 8]) \u279e true\n\nsubset([1, 3], [1, 33]) \u279e false\n\nsubset([1, 3, 10], [10, 8, 8, 8]) \u279e false</code></pre><h3><span>Notes</span></h3><ul><li><span>Each input array will have at least one element.</span></li><li><span>Check the resources tab for a hint.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/m8L8PgCTxAbBbnuYf",
  "tags": [
    "arrays",
    "logic",
    "validation"
  ],
  "tests": "Test.assertEquals(subset([1, 3], [1, 3, 3, 5]), true)\nTest.assertEquals(subset([4, 8, 7], [7, 4, 4, 4, 9, 8]), true)\nTest.assertEquals(subset([1, 3], [1, 33]), false)\nTest.assertEquals(subset([1, 3, 10], [10, 8, 8, 8]), false)\nTest.assertEquals(subset([5, 9, 13], [13, 9, 5]), true)\nTest.assertEquals(subset([5, 9, 13], [13, 9, 5, 1, 1, 1]), true)\nTest.assertEquals(subset([5, 9, 13], [13, 5, 1, 1, 1]), false)",
  "title": "Check if One Array is Subset of Another"
}