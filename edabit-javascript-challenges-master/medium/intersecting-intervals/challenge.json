{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "FqdfcJ65WkiSn5WpJ",
  "code": "function countOverlapping(intervals, point) {\n  \n}",
  "difficulty": "Medium",
  "instructions": "<p><span>Create a function that takes in an array of </span><strong><span>intervals</span></strong><span> and returns how many intervals overlap with a given point.</span></p><p><span>An interval overlaps a particular point if the point exists </span><strong><span>inside</span></strong><span> the interval, or on the interval's </span><strong><span>boundary</span></strong><span>. For example the point </span><code>3</code><span> overlaps with the interval </span><code>[2, 4]</code><span> (it is inside) and </span><code>[2, 3]</code><span> (it is on the boundary).</span></p><p><span>To illustrate:</span></p><pre><code>countOverlapping([[1, 2], [2, 3], [1, 3], [4, 5], [0, 1]], 2) \u279e 3\n// Since [1, 2], [2, 3] and [1, 3] all overlap with point 2.</code></pre><h3><span>Examples</span></h3><pre><code>countOverlapping([[1, 2], [2, 3], [3, 4]], 5) \u279e 0\n\ncountOverlapping([[1, 2], [5, 6], [5, 7]], 5) \u279e 2\n\ncountOverlapping([[1, 2], [5, 8], [6, 9]], 7) \u279e 2</code></pre><h3><span>Notes</span></h3><ul><li><span>Each interval is represented as an array with a start point and an endpoint.</span></li><li><span>Intervals count as intersecting even if they only intersect at one point, i.e. </span><code>[2, 3]</code><span> and </span><code>[3, 4]</code><span> both intersect at point </span><code>3</code><span>.</span></li><li><span>If it's helpful, you can draw these intervals on a line on a piece of paper.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/FqdfcJ65WkiSn5WpJ",
  "tags": [
    "arrays",
    "validation"
  ],
  "tests": "Test.assertEquals(countOverlapping([[1, 2], [2, 3], [3, 4]], 5),0)\nTest.assertEquals(countOverlapping([[1, 2], [5, 6], [5, 7]], 5),2)\nTest.assertEquals(countOverlapping([[1, 2], [5, 8], [6, 9]], 7),2)\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 5), 5)\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 6), 2)\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 2), 2)\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 1), 1)",
  "title": "Intersecting Intervals"
}