{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "jrdEvTaFogLcpN2fH",
  "code": "function squarePatch(n) {\n  \n}",
  "difficulty": "Medium",
  "instructions": "<p><span>Create a function that takes an integer and outputs an </span><code>n x n</code><span> square solely consisting of the integer </span><code>n</code><span>.</span></p><h3><span>Examples</span></h3><pre><code>squarePatch(3) \u279e [\n  [3, 3, 3],\n  [3, 3, 3],\n  [3, 3, 3]\n]\n\nsquarePatch(5) \u279e [\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5]\n]\n\nsquarePatch(1) \u279e [\n  [1]\n]\n\nsquarePatch(0) \u279e []</code></pre><h3><span>Notes</span></h3><ul><li><code>n &gt;= 0</code><span>.</span></li><li><span>If </span><code>n = 0</code><span>, return an empty array.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/jrdEvTaFogLcpN2fH",
  "tags": [
    "arrays",
    "language_fundamentals",
    "loops"
  ],
  "tests": "Test.assertSimilar(squarePatch(3), [\n\t[3, 3, 3],\n\t[3, 3, 3],\n\t[3, 3, 3]\n])\n\nTest.assertSimilar(squarePatch(2), [\n\t[2, 2],\n\t[2, 2]\n])\n\nTest.assertSimilar(squarePatch(4), [\n\t[4, 4, 4, 4],\n\t[4, 4, 4, 4],\n\t[4, 4, 4, 4],\n\t[4, 4, 4, 4]\n])\n\nTest.assertSimilar(squarePatch(6), [\n\t[6, 6, 6, 6, 6, 6],\n\t[6, 6, 6, 6, 6, 6],\n\t[6, 6, 6, 6, 6, 6],\n\t[6, 6, 6, 6, 6, 6],\n\t[6, 6, 6, 6, 6, 6],\n\t[6, 6, 6, 6, 6, 6]\n])\n\nTest.assertSimilar(squarePatch(5), [\n\t[5, 5, 5, 5, 5],\n\t[5, 5, 5, 5, 5],\n\t[5, 5, 5, 5, 5],\n\t[5, 5, 5, 5, 5],\n\t[5, 5, 5, 5, 5]\n])\n\nTest.assertSimilar(squarePatch(1), [[1]])\n\nTest.assertSimilar(squarePatch(0), [])",
  "title": "Perfect Square Patch"
}