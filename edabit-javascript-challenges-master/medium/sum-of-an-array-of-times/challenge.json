{
  "author_id": "Pustur",
  "author_url": "https://edabit.com/user/65dbBZynphj53nXqA",
  "challenge_id": "BP82XMfoRoREMRxLw",
  "code": "function timeSum(times) {\n  \n}",
  "difficulty": "Medium",
  "instructions": "<p><span>Create a function that takes an array of strings representing times (</span><code>'hours:minutes:seconds'</code><span>) and returns their sum as an array of integers (</span><code>[hours, minutes, seconds]</code><span>).</span></p><h3><span>Examples</span></h3><pre><code>timeSum([\"1:23:45\"]) \u279e [1, 23, 45]\n\ntimeSum([\"1:03:45\", \"1:23:05\"]) \u279e [2, 26, 50]\n\ntimeSum([\"5:39:42\", \"10:02:08\", \"8:26:33\"]) \u279e [24, 8, 23]</code></pre><h3><span>Notes</span></h3><p><span>If the input is an empty array, return </span><code>[0, 0, 0]</code><span>.</span></p>",
  "source_url": "https://edabit.com/challenge/BP82XMfoRoREMRxLw",
  "tags": [
    "algorithms",
    "arrays",
    "loops"
  ],
  "tests": "Test.assertSimilar(\n  timeSum([]),\n  [0, 0, 0],\n  'Should work with an empty array'\n);\nTest.assertSimilar(\n  timeSum(['1:23:45']),\n  [1, 23, 45],\n  'Should work with a single time'\n);\nTest.assertSimilar(\n  timeSum(['1:03:45', '1:23:05']),\n  [2, 26, 50],\n  'Should work with leading zeroes in minutes/seconds'\n);\nTest.assertSimilar(\n  timeSum(['1:23:45', '0:00:00']),\n  [1, 23, 45],\n  'Should not break if a value is 0:00:00'\n);\nTest.assertSimilar(\n  timeSum(['18:54:02', '0:26:28', '11:48:22', '22:26:16', '7:17:05', '8:01:44', '0:35:24', '16:25:11', '9:11:24', '18:30:46', '3:31:51', '16:55:32', '17:59:00', '11:29:30', '3:19:58', '9:12:27', '22:03:34', '1:06:12', '0:44:07', '4:47:46', '10:38:00', '14:26:51', '10:09:07', '5:08:29', '5:29:57', '22:15:03', '20:52:28', '8:42:20', '17:36:32', '9:36:17']),\n  [329, 41, 43],\n  'Should work with large arrays totaling more than 60 hours'\n);\nTest.assertSimilar(\n  timeSum(['5:39:42', '10:02:08', '8:26:33']),\n  [24, 8, 23]\n);\nTest.assertSimilar(\n  timeSum(['10:11:02', '8:57:30', '10:58:56', '4:04:17', '3:01:13']),\n  [37, 12, 58]\n);\nTest.assertSimilar(\n  timeSum(['10:39:35', '11:33:23', '2:34:52', '9:17:09', '4:41:57', '3:34:19', '1:31:26', '4:06:01']),\n  [47, 58, 42]\n);",
  "title": "Sum of an Array of Times"
}