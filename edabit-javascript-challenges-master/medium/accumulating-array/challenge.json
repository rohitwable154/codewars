{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "FkH4K9TpFG98t52Ex",
  "code": "function accumulatingArray(arr) {\n  \n}",
  "difficulty": "Medium",
  "instructions": "<p><span>Create a function that takes in an array and returns an array of the accumulating sum. </span></p><h3><span>Examples</span></h3><pre><code>accumulatingArray([1, 2, 3, 4]) \u279e [1, 3, 6, 10]\n// [1, 3, 6, 10] can be written as  [1, 1 + 2, 1 + 2 + 3, 1 + 2 + 3 + 4]\n\naccumulatingArray([1, 5, 7]) \u279e [1, 6, 13]\n\naccumulatingArray([1, 0, 1, 0, 1]) \u279e [1, 1, 2, 2, 3]\n\naccumulatingArray([]) \u279e []</code></pre><h3><span>Notes</span></h3><p><span>An empty array input should return an empty array </span><code>[]</code><span>.</span></p>",
  "source_url": "https://edabit.com/challenge/FkH4K9TpFG98t52Ex",
  "tags": [
    "arrays",
    "closures",
    "loops"
  ],
  "tests": "Test.assertSimilar(accumulatingArray([1, 1, 1, 1, 1]), [1, 2, 3, 4, 5])\nTest.assertSimilar(accumulatingArray([1, 5, 7]), [1, 6, 13])\nTest.assertSimilar(accumulatingArray([1, 0, 1, 0, 1]), [1, 1, 2, 2, 3])\nTest.assertSimilar(accumulatingArray([1, 2, 3, 0, 0, 1]), [1, 3, 6, 6, 6, 7])\nTest.assertSimilar(accumulatingArray([]), [])",
  "title": "Accumulating Array"
}