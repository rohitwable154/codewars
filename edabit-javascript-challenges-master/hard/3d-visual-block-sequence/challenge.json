{
  "author_id": "Ruud Peter Boelens",
  "author_url": "https://edabit.com/user/Akq3fQcPRgPrWfsye",
  "challenge_id": "MevNu8jwsPC8ghS7B",
  "code": "function blocks(step) {\n  \n}",
  "difficulty": "Hard",
  "instructions": "<p><span>A block sequence in three dimensions. We can write a formula for this one:</span></p><p><img alt=\"Sequence Step 1 - 5\" title=\"Sequence Step 1 - 5\" src=\"https://edabit-challenges.s3.amazonaws.com/3d_blocks.png\"></p><p><span>Create a function that takes a number (step) as an argument and returns the amount of blocks in that step.</span></p><h3><span>Examples</span></h3><pre><code>blocks(1) \u279e 5\n\nblocks(5) \u279e 39\n\nblocks(2) \u279e 12</code></pre><h3><span>Notes</span></h3><ul><li><span>Step 0 obviously has to return </span><code>0</code><span>.</span></li><li><span>The input is always a positive integer.</span></li><li><span>Check the </span><strong><span>Resources Tab</span></strong><span> for a nice video on how to find quadratic sequences.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/MevNu8jwsPC8ghS7B",
  "tags": [
    "algorithms",
    "math",
    "numbers"
  ],
  "tests": "Test.assertEquals(blocks(77), 3387)\nTest.assertEquals(blocks(33), 725)\nTest.assertEquals(blocks(50), 1524)\nTest.assertEquals(blocks(21), 335)\nTest.assertEquals(blocks(12), 137)\nTest.assertEquals(blocks(30), 614)\nTest.assertEquals(blocks(93), 4835)\nTest.assertEquals(blocks(53), 1695)\nTest.assertEquals(blocks(71), 2910)\nTest.assertEquals(blocks(36), 845)\nTest.assertEquals(blocks(8), 75)\nTest.assertEquals(blocks(100), 5549)\nTest.assertEquals(blocks(95), 5034)\nTest.assertEquals(blocks(46), 1310)\nTest.assertEquals(blocks(63), 2330)\nTest.assertEquals(blocks(54), 1754)\nTest.assertEquals(blocks(15), 194)\nTest.assertEquals(blocks(45), 1259)\nTest.assertEquals(blocks(64), 2399)\nTest.assertEquals(blocks(46), 1310)\nTest.assertEquals(blocks(68), 2685)\nTest.assertEquals(blocks(46), 1310)\nTest.assertEquals(blocks(23), 390)\nTest.assertEquals(blocks(62), 2262)\nTest.assertEquals(blocks(55), 1814)\nTest.assertEquals(blocks(95), 5034)\nTest.assertEquals(blocks(72), 2987)\nTest.assertEquals(blocks(76), 3305)\nTest.assertEquals(blocks(24), 419)\nTest.assertEquals(blocks(98), 5340)\nTest.assertEquals(blocks(22), 362)\nTest.assertEquals(blocks(39), 974)\nTest.assertEquals(blocks(68), 2685)\nTest.assertEquals(blocks(9), 89)\nTest.assertEquals(blocks(22), 362)\nTest.assertEquals(blocks(85), 4079)\nTest.assertEquals(blocks(37), 887)\nTest.assertEquals(blocks(98), 5340)\nTest.assertEquals(blocks(18), 260)\nTest.assertEquals(blocks(65), 2469)\nTest.assertEquals(blocks(38), 930)\nTest.assertEquals(blocks(70), 2834)\nTest.assertEquals(blocks(84), 3989)\nTest.assertEquals(blocks(21), 335)\nTest.assertEquals(blocks(48), 1415)\nTest.assertEquals(blocks(88), 4355)\nTest.assertEquals(blocks(28), 545)\nTest.assertEquals(blocks(8), 75)\nTest.assertEquals(blocks(93), 4835)\nTest.assertEquals(blocks(3), 20)\nTest.assertEquals(blocks(99), 5444)\nTest.assertEquals(blocks(69), 2759)\nTest.assertEquals(blocks(1), 5)\nTest.assertEquals(blocks(19), 284)\nTest.assertEquals(blocks(83), 3900)\nTest.assertEquals(blocks(39), 974)\nTest.assertEquals(blocks(84), 3989)\nTest.assertEquals(blocks(11), 120)\nTest.assertEquals(blocks(2), 12)\nTest.assertEquals(blocks(2), 12)\nTest.assertEquals(blocks(62), 2262)\nTest.assertEquals(blocks(93), 4835)\nTest.assertEquals(blocks(59), 2064)\nTest.assertEquals(blocks(81), 3725)\nTest.assertEquals(blocks(50), 1524)\nTest.assertEquals(blocks(11), 120)\nTest.assertEquals(blocks(77), 3387)\nTest.assertEquals(blocks(31), 650)\nTest.assertEquals(blocks(37), 887)\nTest.assertEquals(blocks(45), 1259)\nTest.assertEquals(blocks(31), 650)\nTest.assertEquals(blocks(15), 194)\nTest.assertEquals(blocks(5), 39)\nTest.assertEquals(blocks(33), 725)\nTest.assertEquals(blocks(18), 260)\nTest.assertEquals(blocks(92), 4737)\nTest.assertEquals(blocks(94), 4934)\nTest.assertEquals(blocks(11), 120)\nTest.assertEquals(blocks(26), 480)\nTest.assertEquals(blocks(28), 545)\nTest.assertEquals(blocks(36), 845)\nTest.assertEquals(blocks(72), 2987)\nTest.assertEquals(blocks(20), 309)\nTest.assertEquals(blocks(82), 3812)\nTest.assertEquals(blocks(47), 1362)\nTest.assertEquals(blocks(79), 3554)\nTest.assertEquals(blocks(1), 5)\nTest.assertEquals(blocks(20), 309)\nTest.assertEquals(blocks(83), 3900)\nTest.assertEquals(blocks(59), 2064)\nTest.assertEquals(blocks(2), 12)\nTest.assertEquals(blocks(43), 1160)\nTest.assertEquals(blocks(23), 390)\nTest.assertEquals(blocks(78), 3470)\nTest.assertEquals(blocks(0), 0)\nTest.assertEquals(blocks(92), 4737)\nTest.assertEquals(blocks(83), 3900)\nTest.assertEquals(blocks(96), 5135)\nTest.assertEquals(blocks(95), 5034)\nTest.assertEquals(blocks(6), 50)",
  "title": "3D Visual Block Sequence"
}