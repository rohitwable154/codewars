{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "f3Lc7Z5dK3p8dahoz",
  "code": "function canConcatenate(arr, target) {\n  \n}",
  "difficulty": "Hard",
  "instructions": "<p><span>Create a function that returns </span><code>true</code><span> if smaller arrays can concatenate to form the target array and </span><code>false</code><span> otherwise.</span></p><h3><span>Examples</span></h3><pre><code>canConcatenate([[1, 2, 3, 4], [5, 6], [7]], [1, 2, 3, 4, 5, 6, 7]) \u279e true\n\ncanConcatenate([[2, 1, 3], [5, 4, 7, 6]], [7, 6, 5, 4, 3, 2, 1]) \u279e true\n\ncanConcatenate([[2, 1, 3], [5, 4, 7, 6, 7]], [1, 2, 3, 4, 5, 6, 7]) \u279e false\n// Duplicate 7s not found in target array.\n\ncanConcatenate([[2, 1, 3], [5, 4, 7]], [1, 2, 3, 4, 5, 6, 7]) \u279e false\n// Missing 6 from target array.</code></pre><h3><span>Notes</span></h3><ul><li><span>Arrays do not have to be sorted (see example #2).</span></li><li><span>Arrays should concatenate to create the final array exactly (see examples #3 and #4).</span></li></ul>",
  "source_url": "https://edabit.com/challenge/f3Lc7Z5dK3p8dahoz",
  "tags": [
    "arrays",
    "sorting",
    "validation"
  ],
  "tests": "Test.assertEquals(canConcatenate([[1, 2, 3, 4], [5, 6], [7]], [1, 2, 3, 4, 5, 6, 7]), true)\nTest.assertEquals(canConcatenate([[2, 1, 3], [5, 4, 7, 6]], [1, 2, 3, 4, 5, 6, 7]), true)\nTest.assertEquals(canConcatenate([[2, 1, 3], [5, 4, 7, 6]], [7, 6, 5, 4, 3, 2, 1]), true)\nTest.assertEquals(canConcatenate([[2, 1, 3], [5, 4, 7, 6, 7]], [1, 2, 3, 4, 5, 6, 7]), false)\nTest.assertEquals(canConcatenate([[2, 1, 3], [5, 4, 7]], [1, 2, 3, 4, 5, 6, 7]), false)\nTest.assertEquals(canConcatenate([[1, 4], [3]], [1, 3, 4]), true)\nTest.assertEquals(canConcatenate([[1, 4], [3]], [1, 2, 3, 4]), false)\nTest.assertEquals(canConcatenate([[1, 4], [3]], [4, 3, 1]), true)\nTest.assertEquals(canConcatenate([[1, 4], [2, 3]], [4, 3, 1, 2]), true)\nTest.assertEquals(canConcatenate([[1], [2], [3, 4]], [4, 3, 1, 2]), true)\nTest.assertEquals(canConcatenate([[1], [2], [3], [4]], [4, 3, 1, 2]), true)",
  "title": "Concatenate to Form Target Array"
}