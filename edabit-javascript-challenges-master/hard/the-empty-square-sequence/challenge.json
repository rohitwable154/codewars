{
  "author_id": "Ruud Peter Boelens",
  "author_url": "https://edabit.com/user/Akq3fQcPRgPrWfsye",
  "challenge_id": "dq5bqbRnPwDxJyobL",
  "code": "function emptySq(step) {\n  \n}",
  "difficulty": "Hard",
  "instructions": "<p><span>In the image below, squares are either empty or filled with a circle.</span></p><p><img alt=\"Steps vs Empty Squarest\" title=\"Steps vs Empty Squares\" src=\"https://edabit-challenges.s3.amazonaws.com/empty_square_sequence.png\"></p><p><span>Create a function that takes a number as a step and returns the amount of empty squares.</span></p><h3><span>Examples</span></h3><pre><code>emptySq(1) \u279e 0\n\nemptySq(3) \u279e 24\n\nemptySq(10) \u279e 360</code></pre><h3><span>Notes</span></h3><p><span>Test input will always be a positive integer.</span></p>",
  "source_url": "https://edabit.com/challenge/dq5bqbRnPwDxJyobL",
  "tags": [
    "algebra",
    "math",
    "validation"
  ],
  "tests": "Test.assertEquals(emptySq(3), 24)\nTest.assertEquals(emptySq(1), 0)\nTest.assertEquals(emptySq(27), 2808)\nTest.assertEquals(emptySq(3), 24)\nTest.assertEquals(emptySq(0), 0, 'Even though the box is unexisting, the amount of empty squares is also 0.')\nTest.assertEquals(emptySq(10), 360)\nTest.assertEquals(emptySq(19), 1368)\nTest.assertEquals(emptySq(60), 14160)\nTest.assertEquals(emptySq(7), 168)",
  "title": "The Empty Square Sequence"
}