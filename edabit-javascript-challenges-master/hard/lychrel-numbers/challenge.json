{
  "author_id": "Matt",
  "author_url": "https://edabit.com/user/BkPgkDQGHm66X4Qai",
  "challenge_id": "d8gGWEAJuxaPrGoiT",
  "code": "function lychrel(n) {\n  \n}",
  "difficulty": "Hard",
  "instructions": "<p><span>The following is the Lychrel test.</span></p><p><span>Start with any positive number. Add the number with the number formed by reversing its digits. Is the sum a palindrome? If not, repeat the process.</span></p><p><span>For most numbers, a palindrome is produced after a few iterations (7 or fewer) of the process above. Numbers that never reach a palindrome are called </span><strong><em><span>Lychrel</span></em></strong><span> numbers. No number in base 10 has been </span><em><span>proven</span></em><span> to be a Lychrel number, but numbers that don't produce palindromes after an unusually high number of iterations of the reverse-and-add process are said to be </span><strong><em><span>Lychrel candidates</span></em></strong></p><p><span>Create a function that takes a number and returns </span><code>true</code><span> if it is a Lychrel candidate. If it isn't, return the number of reverse-and-add iterations it takes to produce a palindrome. For this challenge, the threshold for a Lychrel candidate is </span><strong><span>&gt;=500</span></strong><span> iterations.</span></p><h3><span>Examples</span></h3><pre><code>lychrel(33) \u279e 0\n// Already a palindrome.\n\nlychrel(65) \u279e 1\n// 65+56 -&gt; 121\n\nlychrel(348) \u279e 3\n// 348+843 -&gt; 1191+1911 -&gt; 3102+2013 -&gt; 5115\n\nlychrel(295) \u279e true</code></pre><h3><span>Notes</span></h3><p><span>N/A</span></p>",
  "source_url": "https://edabit.com/challenge/d8gGWEAJuxaPrGoiT",
  "tags": [
    "algebra",
    "math",
    "numbers"
  ],
  "tests": "Test.assertEquals(lychrel(33), 0)\nTest.assertEquals(lychrel(65), 1)\nTest.assertEquals(lychrel(348), 3)\nTest.assertEquals(lychrel(196), true)\nTest.assertEquals(lychrel(89), 24)\nTest.assertEquals(lychrel(7582), 4)\nTest.assertEquals(lychrel(1945), true)\nTest.assertEquals(lychrel(3673), true)\nTest.assertEquals(lychrel(9485367), 2)\nTest.assertEquals(lychrel(695), 3)",
  "title": "Lychrel Numbers"
}