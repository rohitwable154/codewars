{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "m9pkGmuoEWsdHrNHi",
  "code": "function stringCode(sentence) {\n  \n}",
  "difficulty": "Hard",
  "instructions": "<p><span>Create a function that takes in a sentence and returns a running list of </span><strong><span>consonants per word</span></strong><span> and </span><strong><span>vowels per word</span></strong><span>.</span></p><h3><span>Examples</span></h3><pre><code>stringCode(\"Happy Birthday To Me!\")\n\u279e [\"4 6 1 1\", \"1 2 1 1\"]\n\n// Consonants - 4 : [H, p, p, y], 6 : [B, r, t, h, d, y], 1: [T], 1 : [M]\n// Vowels - 1: [a], 2 : [i, a], 1: [o], 1: [e]\n\nstringCode(\"I'd like to drink my first glass of champagne.\")\n\u279e [ \"1 2 1 4 2 4 4 1 6', '1 2 1 1 0 1 1 1 3\"]\n\nstringCode(\"The first man to walk on the moon was Neil Armstrong.\")\n\u279e [ \"2 4 2 1 3 1 2 2 2 2 7\", \"1 1 1 1 1 1 1 2 1 2 2\" ]</code></pre><h3><span>Notes</span></h3><ul><li><span>Only count letters and disregard all other characters (e.g. numbers, punctuation, etc).</span></li><li><span>Count </span><strong><span>y</span></strong><span> as a consonant.</span></li><li><span>Capitalization does not matter.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/m9pkGmuoEWsdHrNHi",
  "tags": [
    "higher_order_functions",
    "regex",
    "strings"
  ],
  "tests": "Test.assertSimilar(stringCode(\"I'd like to drink my first glass of champagne.\"), ['1 2 1 4 2 4 4 1 6', '1 2 1 1 0 1 1 1 3'])\nTest.assertSimilar(stringCode(\"The first man to walk on the moon was Neil Armstrong.\"), [ '2 4 2 1 3 1 2 2 2 2 7', '1 1 1 1 1 1 1 2 1 2 2'])\nTest.assertSimilar(stringCode(\"I've got a lovely bunch of coconuts.\"), [ '1 2 0 4 4 1 5', '2 1 1 2 1 1 3' ])\nTest.assertSimilar(stringCode(\"There they are a'standing in a row.\"), [ '3 3 1 6 1 0 2', '2 1 2 3 1 1 1' ])\nTest.assertSimilar(stringCode(\"Let them eat cake.\"), [ '2 3 1 2', '1 1 2 2' ])\nTest.assertSimilar(stringCode(\"It does not matter how slowly you go as long as you do not stop.\"), [ '1 2 2 4 2 5 1 1 1 3 1 1 1 2 3', '1 2 1 2 1 1 2 1 1 1 1 2 1 1 1'])\nTest.assertSimilar(stringCode(\"To be or not to be, that is the question.\"), [ '1 1 1 2 1 1 3 1 2 4', '1 1 1 1 1 1 1 1 1 4' ])\nTest.assertSimilar(stringCode(\"Believe you can and you're halfway there.\"), [ '3 1 2 2 2 5 3', '4 2 1 1 3 2 2' ])",
  "title": "Consonant-Vowel Coding"
}