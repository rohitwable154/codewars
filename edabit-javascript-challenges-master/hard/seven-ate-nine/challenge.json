{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "dHAk8zPwacSev6Hmv",
  "code": "function nomNom(arr) {\n  \n}",
  "difficulty": "Hard",
  "instructions": "<p><span>A number can </span><strong><span>eat</span></strong><span> the number to the right of it if it's </span><strong><span>smaller</span></strong><span> than itself. After eating that number, it becomes the sum of itself and that number. Your job is to create a function that returns the final array after the leftmost element has finished \"eating\".</span></p><h3><span>Examples</span></h3><pre><code>[5, 3, 7] \u279e [8, 7] \u279e [15]\n\n// 5 eats 3 to become 8\n// 8 eats 7 to become 15</code></pre><pre><code>[5, 3, 9] \u279e [8, 9]\n\n// 5 eats 3 to become 8\n// 8 cannot eat 9, since 8 &lt; 9</code></pre><pre><code>nomNom([1, 2, 3]) \u279e [1, 2, 3]\n\nnomNom([2, 1, 3]) \u279e [3, 3]\n\nnomNom([8, 5, 9]) \u279e [22]</code></pre><h3><span>Notes</span></h3><p><span>Test input contains only an array of numbers.</span></p>",
  "source_url": "https://edabit.com/challenge/dHAk8zPwacSev6Hmv",
  "tags": [
    "arrays",
    "logic",
    "math"
  ],
  "tests": "Test.assertSimilar(nomNom([1, 2, 3]), [1, 2, 3], \"1 cannot eat 2, so numbers remain uneaten.\")\nTest.assertSimilar(nomNom([2, 1, 3]), [3, 3], \"2 can eat 1 to become 3. 3 cannot eat 3.\")\nTest.assertSimilar(nomNom([8, 5, 9]), [22], \"8 eats 5 to become 13, 13 eats 9 to become 22.\")\nTest.assertSimilar(nomNom([5, 3, 7]), [15], \"5 eats 3 to become 8. 8 eats 7 to become 15.\")\nTest.assertSimilar(nomNom([5, 3, 9]), [8, 9], \"5 eats 3 to become 8. 8 cannot eat 9.\")\nTest.assertSimilar(nomNom([6, 5, 6, 100]), [17, 100], \"6 eats 5 to become 11. 11 eats 7 to become 17. 17 cannot eat 100.\")",
  "title": "Seven Ate Nine"
}