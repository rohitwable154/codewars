{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "BsCHQ6fyzmrTYLNsR",
  "code": "function evenOddPartition(arr) {\n  \n}",
  "difficulty": "Very Easy",
  "instructions": "<p><span>Write a function that partitions the array into two subarrays: one with all even integers, and the other with all odd integers. Return your result in the following format:</span></p><pre><code>[[evens], [odds]]</code></pre><h3><span>Examples</span></h3><pre><code>evenOddPartition([5, 8, 9, 2, 0]) \u279e [[8, 2, 0], [5, 9]]\n\nevenOddPartition([1, 0, 1, 0, 1, 0]) \u279e [[0, 0, 0], [1, 1, 1]]\n\nevenOddPartition([1, 3, 5, 7, 9]) \u279e [[], [1, 3, 5, 7, 9]]\n\nevenOddPartition([]) \u279e [[], []]</code></pre><h3><span>Notes</span></h3><ul><li><span>Return two empty subarrays if the input is an empty array.</span></li><li><span>Keep the same relative ordering as the original array.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/BsCHQ6fyzmrTYLNsR",
  "tags": [
    "arrays",
    "higher_order_functions"
  ],
  "tests": "Test.assertSimilar(evenOddPartition([5, 8, 9, 2, 0]), [[8, 2, 0], [5, 9]])\nTest.assertSimilar(evenOddPartition([1, 0, 1, 0, 1, 0]), [[0, 0, 0], [1, 1, 1]])\nTest.assertSimilar(evenOddPartition([8, 8, 4, 2]), [[8, 8, 4, 2], []])\nTest.assertSimilar(evenOddPartition([1, 3, 5, 7, 9]), [[], [1, 3, 5, 7, 9]])\nTest.assertSimilar(evenOddPartition([]), [[], []])",
  "title": "Even Odd Partition"
}