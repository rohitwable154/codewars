{
  "author_id": "Nabeel Mumtaz",
  "author_url": "https://edabit.com/user/8wFyDvkPiDdKRDExt",
  "challenge_id": "3cBe8af7yG2rzLEA2",
  "code": "function Go(num) {\n  \n}",
  "difficulty": "Very Easy",
  "instructions": "<p><span>Create a function that takes a number (from 1 - 60) and returns a corresponding </span><code>string</code><span> of hyphens.</span></p><h3><span>Examples</span></h3><pre><code>Go(1) \u279e \"-\"\n\nGo(5) \u279e \"-----\"\n\nGo(3) \u279e \"---\"</code></pre><h3><span>Notes</span></h3><ul><li><span>You will be provided integers ranging from 1 to 60.</span></li><li><span>Don't forget to return your result as a </span><code>string</code><span>.</span></li><li><span>If you get stuck on a challenge, find help in the </span><strong><span>Resources</span></strong><span> tab.</span></li><li><span>If you're </span><em><span>really</span></em><span> stuck, unlock solutions in the </span><strong><span>Solutions</span></strong><span> tab.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/3cBe8af7yG2rzLEA2",
  "tags": [
    "loops",
    "numbers",
    "strings"
  ],
  "tests": "Test.assertEquals(Go(1),\"-\")\nTest.assertEquals(Go(2),\"--\")\nTest.assertEquals(Go(3),\"---\")\nTest.assertEquals(Go(4),\"----\")\nTest.assertEquals(Go(5),\"-----\")\nTest.assertEquals(Go(6),\"------\")\nTest.assertEquals(Go(7),\"-------\")\nTest.assertEquals(Go(8),\"--------\")\nTest.assertEquals(Go(9),\"---------\")\nTest.assertEquals(Go(10),\"----------\")\nTest.assertEquals(Go(11),\"-----------\")\nTest.assertEquals(Go(12),\"------------\")\nTest.assertEquals(Go(13),\"-------------\")\nTest.assertEquals(Go(14),\"--------------\")\nTest.assertEquals(Go(15),\"---------------\")\nTest.assertEquals(Go(16),\"----------------\")\nTest.assertEquals(Go(17),\"-----------------\")\nTest.assertEquals(Go(18),\"------------------\")\nTest.assertEquals(Go(19),\"-------------------\")\nTest.assertEquals(Go(20),\"--------------------\")\nTest.assertEquals(Go(21),\"---------------------\")\nTest.assertEquals(Go(22),\"----------------------\")\nTest.assertEquals(Go(23),\"-----------------------\")\nTest.assertEquals(Go(24),\"------------------------\")\nTest.assertEquals(Go(25),\"-------------------------\")\nTest.assertEquals(Go(26),\"--------------------------\")\nTest.assertEquals(Go(27),\"---------------------------\")\nTest.assertEquals(Go(28),\"----------------------------\")\nTest.assertEquals(Go(29),\"-----------------------------\")\nTest.assertEquals(Go(30),\"------------------------------\")\nTest.assertEquals(Go(31),\"-------------------------------\")\nTest.assertEquals(Go(32),\"--------------------------------\")\nTest.assertEquals(Go(33),\"---------------------------------\")\nTest.assertEquals(Go(34),\"----------------------------------\")\nTest.assertEquals(Go(35),\"-----------------------------------\")\nTest.assertEquals(Go(36),\"------------------------------------\")\nTest.assertEquals(Go(37),\"-------------------------------------\")\nTest.assertEquals(Go(38),\"--------------------------------------\")\nTest.assertEquals(Go(39),\"---------------------------------------\")\nTest.assertEquals(Go(40),\"----------------------------------------\")\nTest.assertEquals(Go(41),\"-----------------------------------------\")\nTest.assertEquals(Go(42),\"------------------------------------------\")\nTest.assertEquals(Go(43),\"-------------------------------------------\")\nTest.assertEquals(Go(44),\"--------------------------------------------\")\nTest.assertEquals(Go(45),\"---------------------------------------------\")\nTest.assertEquals(Go(46),\"----------------------------------------------\")\nTest.assertEquals(Go(47),\"-----------------------------------------------\")\nTest.assertEquals(Go(48),\"------------------------------------------------\")\nTest.assertEquals(Go(49),\"-------------------------------------------------\")\nTest.assertEquals(Go(50),\"--------------------------------------------------\")\nTest.assertEquals(Go(51),\"---------------------------------------------------\")\nTest.assertEquals(Go(52),\"----------------------------------------------------\")\nTest.assertEquals(Go(53),\"-----------------------------------------------------\")\nTest.assertEquals(Go(54),\"------------------------------------------------------\")\nTest.assertEquals(Go(55),\"-------------------------------------------------------\")\nTest.assertEquals(Go(56),\"--------------------------------------------------------\")\nTest.assertEquals(Go(57),\"---------------------------------------------------------\")\nTest.assertEquals(Go(58),\"----------------------------------------------------------\")\nTest.assertEquals(Go(59),\"-----------------------------------------------------------\")\nTest.assertEquals(Go(60),\"------------------------------------------------------------\")",
  "title": "Convert Number to String of Dashes"
}