{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "ghbHrRnRiDz9fvQNF",
  "code": "function profitableGamble(prob, prize, pay) {\n  \n}",
  "difficulty": "Very Easy",
  "instructions": "<p><span>Create a function that takes in three arguments (prob, prize, pay) and returns </span><code>true</code><span> if </span><em><span>prob * prize &gt; pay</span></em><span>; otherwise return </span><code>false</code><span>.</span></p><p><span>To illustrate, </span><code>profitableGamble(0.2, 50, 9)</code><span> should yield </span><code>true</code><span>, since the net profit is 1 (0.2 * 50 - 9), and 1 &gt; 0.</span></p><h3><span>Examples</span></h3><pre><code>profitableGamble(0.2, 50, 9) \u279e true\n\nprofitableGamble(0.9, 1, 2) \u279e false\n\nprofitableGamble(0.9, 3, 2) \u279e true</code></pre><h3><span>Notes</span></h3><p><span>A profitable gamble is a game that yields a positive net profit, where net profit is calculated in the following manner: net_outcome = probability_of_winning * prize - cost_of_playing.</span></p>",
  "source_url": "https://edabit.com/challenge/ghbHrRnRiDz9fvQNF",
  "tags": [
    "arrays",
    "math"
  ],
  "tests": "Test.assertEquals(profitableGamble(0.2, 50, 9), true)\nTest.assertEquals(profitableGamble(0.9, 1, 2), false)\nTest.assertEquals(profitableGamble(0.9, 3, 2), true)\nTest.assertEquals(profitableGamble(0.33, 10, 3.30), true)\nTest.assertEquals(profitableGamble(0, 1000, 0.01), false)\nTest.assertEquals(profitableGamble(0.1, 1000, 7), true)\nTest.assertEquals(profitableGamble(0, 0, 0), false)",
  "title": "Profitable Gamble"
}