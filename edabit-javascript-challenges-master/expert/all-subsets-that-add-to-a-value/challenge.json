{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "5B5bqA9pFwCobWXMH",
  "code": "function getSubsets(arr, num) {\n  \n}",
  "difficulty": "Expert",
  "instructions": "<p><span>Create a function that returns all subarrays in an array that sum to a particular value. Return the subarrays in the following order:</span></p><ol><li><span>First by </span><strong><span>ascending length</span></strong><span>.</span></li><li><span>Second by comparing element-by-element, starting from the leftmost one. Put the array with the </span><strong><span>smaller</span></strong><span> element first in the pairwise comparison.</span></li></ol><p><span>The following example will illustrate:</span></p><pre><code>getSubsets([-3, -2, -1, 0, 1, 2, 3], 2)\n[ // All the subsets below sum to 2.\n  [2],\n  [-1, 3],\n  [0, 2], // Same length: -1 &lt; 0, so [-1, 3] goes before [0, 2]\n  [-3, 2, 3],\n  [-2, 1, 3],\n  [-1, 0, 3],\n  [-1, 1, 2],\n  [-3, 0, 2, 3],\n  [-2, -1, 2, 3],\n  [-2, 0, 1, 3], // Same length + same first element: -1 &lt; 0, so [-2, -1, 2, 3] goes before [-2, 0, 1, 3]\n  [-1, 0, 1, 2],\n  [-3, -1, 1, 2, 3],\n  [-2, -1, 0, 2, 3],\n  [-3, -1, 0, 1, 2, 3]\n]</code></pre><h3><span>Examples</span></h3><pre><code>getSubsets([-1, 0, 1, 2], 2) \u279e [[2], [0, 2], [-1, 1, 2], [-1, 0, 1, 2]]\n\ngetSubsets([-1, 0, 1, 2], 3) \u279e [[1, 2], [0, 1, 2]]\n\ngetSubsets([1, 2, 3, 4], 5) \u279e [[1, 4], [2, 3]]\n\ngetSubsets([-1, 0, 1, 2], 4) \u279e []</code></pre><h3><span>Notes</span></h3><ul><li><span>Arrays will have unique numbers.</span></li><li><span>Return an empty array if there does not a exist a subset whose numbers sum to that value (see fourth example).</span></li></ul>",
  "source_url": "https://edabit.com/challenge/5B5bqA9pFwCobWXMH",
  "tags": [
    "arrays",
    "higher_order_functions",
    "sorting"
  ],
  "tests": "Test.assertSimilar(getSubsets([-1, 0, 1, 2], 2), [[2], [0, 2], [-1, 1, 2], [-1, 0, 1, 2]])\nTest.assertSimilar(getSubsets([-1, 0, 1, 2], 3), [[1, 2], [0, 1, 2]])\nTest.assertSimilar(getSubsets([1, 2, 3, 4], 5), [[1, 4], [2, 3]])\nTest.assertSimilar(getSubsets([-1, 0, 1, 2], 4), [])\nTest.assertSimilar(getSubsets([1, 2, 3, 4, 5, 6], 6), [[6], [1, 5], [2, 4], [1, 2, 3]])\nTest.assertSimilar(getSubsets([-3, -2, -1, 0, 1, 2, 3], 2),\n[[2], \n[-1, 3], \n[0, 2], \n[-3, 2, 3], \n[-2, 1, 3], \n[-1, 0, 3],\n[-1, 1, 2], \n[-3, 0, 2, 3], \n[-2, -1, 2, 3], \n[-2, 0, 1, 3], \n[-1, 0, 1, 2], \n[-3, -1, 1, 2, 3], \n[-2, -1, 0, 2, 3], \n[-3, -1, 0, 1, 2, 3]])",
  "title": "All Subsets that Add to a Value"
}