{
  "author_id": "joe111",
  "author_url": "https://edabit.com/user/E3bAbAjwFzekBoMGD",
  "challenge_id": "Y8vbWzFb2GcyQ3hMm",
  "code": "function myPi(n) {\n  \n}",
  "difficulty": "Easy",
  "instructions": "<p><span>Given a number </span><em><span>n</span></em><span>, write a function that returns PI to n decimal places.</span></p><h3><span>Examples</span></h3><pre><code>myPi(5) \u279e 3.14159\n\nmyPi(4) \u279e 3.1416\n\nmyPi(15) \u279e 3.141592653589793</code></pre><h3><span>Notes</span></h3><ul><li><em><span>n</span></em><span> will not be above 15, to keep this challenge simple.</span></li><li><span>Round up the last digit if the next digit in PI is greater or equal to 5 (see second example above).</span></li><li><span>The return value must be a number, not a string.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/Y8vbWzFb2GcyQ3hMm",
  "tags": [
    "math",
    "numbers"
  ],
  "tests": "Test.assertEquals(myPi(0), 3)\nTest.assertEquals(myPi(1), 3.1)\nTest.assertEquals(myPi(2), 3.14)\nTest.assertEquals(myPi(3), 3.142)\nTest.assertEquals(myPi(5), 3.14159)\nTest.assertEquals(myPi(6), 3.141593)\nTest.assertEquals(myPi(7), 3.1415927)\nTest.assertEquals(myPi(8), 3.14159265)\nTest.assertEquals(myPi(9), 3.141592654)\nTest.assertEquals(myPi(10), 3.1415926536)\nTest.assertEquals(myPi(11), 3.14159265359)\nTest.assertEquals(myPi(12), 3.141592653590)\nTest.assertEquals(myPi(13), 3.1415926535898)\nTest.assertEquals(myPi(14), 3.14159265358979)\nTest.assertEquals(myPi(15), 3.141592653589793)",
  "title": "Pi to N Decimal Places"
}