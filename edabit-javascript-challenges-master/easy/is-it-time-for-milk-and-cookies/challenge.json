{
  "author_id": "Matt",
  "author_url": "https://edabit.com/user/BkPgkDQGHm66X4Qai",
  "challenge_id": "hPWnaSckJke5FXNEH",
  "code": "function timeForMilkAndCookies(date) {\n  \n}",
  "difficulty": "Easy",
  "instructions": "<p><span>Christmas Eve is almost upon us, so naturally we need to prepare some milk and cookies for Santa! Create a function that accepts a </span><code>Date</code><span> object and returns </span><code>true</code><span> if it's Christmas Eve (December 24th) and </span><code>false</code><span> otherwise. Keep in mind JavaScript's </span><code>Date</code><span> month is 0 based, meaning December is the 11th month while January is 0.</span></p><h3><span>Examples</span></h3><pre><code>timeForMilkAndCookies(new Date(2013, 11, 24)) \u279e true\n\ntimeForMilkAndCookies(new Date(2013, 0, 23)) \u279e false\n\ntimeForMilkAndCookies(new Date(3000, 11, 24)) \u279e true</code></pre><h3><span>Notes</span></h3><ul><li><span>Dates are zero zero based (see resources).</span></li><li><span>All test cases contain valid dates.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/hPWnaSckJke5FXNEH",
  "tags": [
    "dates",
    "validation"
  ],
  "tests": "Test.assertEquals(timeForMilkAndCookies(new Date(2013, 11, 24)), true)\nTest.assertEquals(timeForMilkAndCookies(new Date(3000, 11, 24)), true)\nTest.assertEquals(timeForMilkAndCookies(new Date(2154, 11, 11)), false)\nTest.assertEquals(timeForMilkAndCookies(new Date(2010, 11, 2)), false)\nTest.assertEquals(timeForMilkAndCookies(new Date(1980, 9, 24)), false)",
  "title": "Is it Time for Milk and Cookies?"
}