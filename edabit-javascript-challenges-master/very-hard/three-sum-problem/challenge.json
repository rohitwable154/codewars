{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "iPni4XaMwG6qAjxgj",
  "code": "function threeSum(arr) {\n  \n}",
  "difficulty": "Very Hard",
  "instructions": "<p><span>Write a function that returns all </span><strong><span>sets of 3 elements</span></strong><span> that </span><strong><span>sum to 0</span></strong><span>.</span></p><h3><span>Examples</span></h3><pre><code>threeSum([0, 1, -1, -1, 2]) \u279e [[0, 1, -1], [-1, -1, 2]]\n\nthreeSum([0, 0, 0, 5, -5]) \u279e [[0, 0, 0], [0, 5, -5]]\n\nthreeSum([1, 2, 3]) \u279e []\n\nthreeSum([1]) \u279e []</code></pre><h3><span>Notes</span></h3><ul><li><span>The original array </span><strong><span>may contain duplicate numbers</span></strong><span>.</span></li><li><span>Each three-element subarray in your output should be </span><strong><span>distinct</span></strong><span>.</span></li><li><span>Subarrays should be ordered by the first element of the subarray.</span></li><li><span>Subarrays themselves should be ordered the same as the original array.</span></li><li><span>Return an empty array if no 3  elements sum to zero.</span></li><li><span>Return an empty array if there are fewer than 3 elements.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/iPni4XaMwG6qAjxgj",
  "tags": [
    "arrays",
    "loops",
    "math"
  ],
  "tests": "Test.assertSimilar(threeSum([0, 1, -1, -1, 2]), [[0, 1, -1], [-1, -1, 2]])\nTest.assertSimilar(threeSum([0, 0, 0, 5, -5]), [[0, 0, 0], [0, 5, -5]])\nTest.assertSimilar(threeSum([0, -1, 1, 0, -1, 1]), [[0, -1, 1], [0, 1, -1], [-1, 1, 0], [-1, 0, 1], [1, 0, -1]])\nTest.assertSimilar(threeSum([0, 5, 5, 0, 0]), [[0, 0, 0]])\nTest.assertSimilar(threeSum([0, 5, -5, 0, 0]), [[0, 5, -5], [0, 0, 0], [5, -5, 0]])\nTest.assertSimilar(threeSum([1, 2, 3, -5, 8, 9, -9, 0]), [[1, 8, -9], [2, 3, -5], [9, -9, 0]])\nTest.assertSimilar(threeSum([0, 0, 0]), [[0, 0, 0]])\nTest.assertSimilar(threeSum([1, 5, 5, 2]), [])\nTest.assertSimilar(threeSum([1, 1]), [])\nTest.assertSimilar(threeSum([]), [])",
  "title": "Three Sum Problem"
}