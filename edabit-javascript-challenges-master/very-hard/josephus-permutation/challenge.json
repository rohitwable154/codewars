{
  "author_id": "Matt",
  "author_url": "https://edabit.com/user/BkPgkDQGHm66X4Qai",
  "challenge_id": "j4jFjDQZCQtJ4nDSA",
  "code": "function whoGoesFree(n, k) {\n  \n}",
  "difficulty": "Very Hard",
  "instructions": "<p><span>A group of </span><code>n</code><span> prisoners stand in a circle awaiting execution. Starting from an arbitrary position(0), the executioner kills every </span><code>k</code><span>th person until one person remains standing, who is then granted freedom (see examples).</span></p><p><span>Create a function that takes 2 arguments \u2014 the number of people to be executed (n), and the step size (k), and returns the original position (index) of the person who survives.</span></p><h3><span>Examples</span></h3><pre><code>whoGoesFree(9, 2) \u279e 2\n\n# Prisoners = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n# Executed people replaced by - (a dash) for illustration purposes.\n# 1st round of execution = [0, -, 2, -, 4, -, 6, -, 8]  -&gt; [0, 2, 4, 6, 8]\n# 2nd round = [-, 2, -, 6, -] -&gt; [2, 6]  # 0 is killed in this round because it's beside 8 who was skipped over.\n# 3rd round = [2, -]\n\nwhoGoesFree(9, 3) \u279e 0\n\n# [0, 1, 2, 3, 4, 5, 6, 7, 8]\n# [0, 1, -, 3, 4, -, 6, 7, -] -&gt; [0, 1, 3, 4, 6, 7]\n# [0, 1, -, 4, 6, -] -&gt; [0, 1, 4, 6]\n# [0, 1, -, 6] -&gt; [0, 1, 6]\n# [0, -, 6] -&gt; [0, 6]\n# [0, -] -&gt; [0]</code></pre><h3><span>Notes</span></h3><p><span>Refer to </span><strong><span>Resources</span></strong><span> tab for more info.</span></p>",
  "source_url": "https://edabit.com/challenge/j4jFjDQZCQtJ4nDSA",
  "tags": [
    "loops",
    "math",
    "recursion"
  ],
  "tests": "Test.assertEquals(whoGoesFree(9, 2), 2)\nTest.assertEquals(whoGoesFree(9, 3), 0)\nTest.assertEquals(whoGoesFree(7, 2), 6)\nTest.assertEquals(whoGoesFree(7, 3), 3)\nTest.assertEquals(whoGoesFree(15, 4), 12)\nTest.assertEquals(whoGoesFree(14, 3), 1)\nTest.assertEquals(whoGoesFree(53, 7), 21)\nTest.assertEquals(whoGoesFree(543, 21), 455)\nTest.assertEquals(whoGoesFree(673, 13), 303)",
  "title": "Josephus Permutation"
}