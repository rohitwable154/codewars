{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "QPqN3tp7RqsxKRnq2",
  "code": "function canPut(str, dim) {\n  \n}",
  "difficulty": "Very Hard",
  "instructions": "<p><span>A billboard is an </span><code>m x n</code><span> array, where each array element consists of either one letter or a blank space. You are given a phrase and the billboard dimensions. Create a function that determines whether you can place the complete phrase on the billboard.</span></p><p><span>There are two rules:</span></p><ol><li><span>If there is a space between two words:</span><ul><li><span>If they are on the same row, you must put a space.</span></li><li><span>If they are two different rows, the space is optional.</span></li></ul></li><li><span>You can only put COMPLETE words on a row.</span></li></ol><p><span>To illustrate, </span><code>canPut(\"GOOD MORN\", [2, 4])</code><span> should yield </span><code>true</code><span>, since while there is a space between \"GOOD\" and \"MORN\", it's not needed since both words are on separate rows.</span></p><pre><code>[\n  [\"G\", \"O\", \"O\", \"D\"],\n  [\"M\", \"O\", \"R\", \"N\"]\n]</code></pre><p><span>On the other hand  </span><code>canPut(\"GOOD MORN\", [1, 8])</code><span> should yield </span><code>false</code><span>. Since both words reside in the first row, we require nine spots, and eight would yield the incomplete phrase \"GOOD MOR\".</span></p><pre><code>[\n  [\"G\", \"O\", \"O\", \"D\", \"_\", \"M\", \"O\", \"R\"]\n]</code></pre><p><span>We would also return </span><code>false</code><span> if we could not fit a word on a row. So </span><code>canPut(\"GOOD MORN\", [3,3])</code><span> should yield </span><code>false</code><span>, since we can only fit \"GOO\" on the first row.</span></p><pre><code>[\n  [\"G\", \"O\", \"O\"],\n  [\"D\", \"_\", \"M\"],\n  [\"O\", \"R\", \"N\"]\n]\n\n// No good!</code></pre><h3><span>Examples</span></h3><pre><code>canPut(\"HEY JUDE\", [2, 4]) \u279e true\n\ncanPut(\"HEY JUDE\", [1, 8]) \u279e true\n\ncanPut(\"HEY JUDE\", [1, 7]) \u279e false\n\ncanPut(\"HEY JUDE\", [4, 3]) \u279e false</code></pre><h3><span>Notes</span></h3><p><span>It is okay to leave extra empty spaces on one line if you cannot fit two words with a space. For example, in a 5 x 5 billboard, you can put \"BE\" on the first row and \"HAPPY\" on the second row.</span></p>",
  "source_url": "https://edabit.com/challenge/QPqN3tp7RqsxKRnq2",
  "tags": [
    "arrays",
    "validation"
  ],
  "tests": "Test.assertEquals(canPut(\"HEY JUDE\", [2, 4]), true)\nTest.assertEquals(canPut(\"HEY JUDE\", [1, 8]), true)\nTest.assertEquals(canPut(\"HEY JUDE\", [1, 7]), false, 'cannot fit leaving a space in')\nTest.assertEquals(canPut(\"HEY JUDE\", [4, 3]), false, 'JUDE cannot fit on second row')\nTest.assertEquals(canPut(\"CU L8R\", [2, 2]), false, 'L8R cannot fit on second row')\nTest.assertEquals(canPut(\"CU L8R\", [1, 5]), false, 'cannot fit leaving a space in')\nTest.assertEquals(canPut(\"CU L8R\", [5, 5]), true)\nTest.assertEquals(canPut(\"BEAUTY IS WITHIN\", [3, 6]), true)\nTest.assertEquals(canPut(\"BEAUTY IS WITHIN\", [4, 5]), false)",
  "title": "Billboard"
}