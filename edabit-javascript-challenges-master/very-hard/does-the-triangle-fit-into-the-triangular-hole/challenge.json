{
  "author_id": "Matt",
  "author_url": "https://edabit.com/user/BkPgkDQGHm66X4Qai",
  "challenge_id": "7e2Aq87tDpW2CK7XH",
  "code": "function doesTriangleFit(brick, hole) {\n  \n}",
  "difficulty": "Very Hard",
  "instructions": "<p><span>Create a function that takes the dimensions of two triangles (as arrays) and checks if the first triangle fits into the second one.</span></p><h3><span>Examples</span></h3><pre><code>doesTriangleFit([1, 2, 3], [1, 2, 3]) \u279e true\n\ndoesTriangleFit([1, 2, 3], [3, 2, 1]) \u279e true\n\ndoesTriangleFit([1, 2, 3], [1, 2, 2]) \u279e false\n\ndoesTriangleFit([1, 2, 4], [1, 2, 6]) \u279e false</code></pre><h3><span>Notes</span></h3><ul><li><span>Triangle fits if it has the same or smaller size as the hole.</span></li><li><span>The function should return </span><code>false</code><span> if the triangle with that dimensions is not possible.</span></li></ul>",
  "source_url": "https://edabit.com/challenge/7e2Aq87tDpW2CK7XH",
  "tags": [
    "arrays",
    "conditions",
    "validation"
  ],
  "tests": "Test.assertEquals(doesTriangleFit([1, 1, 1], [1, 1, 1]), true, \"Same triangle\")\nTest.assertEquals(doesTriangleFit([1, 1, 1], [2, 2, 2]), true, \"Smaller triangle\")\nTest.assertEquals(doesTriangleFit([1, 6, 8], [1, 6, 8]), false, \"Not a triangle\")\nTest.assertEquals(doesTriangleFit([12, 63, 42], [1, 6, 8]), false, \"too small hole\")\nTest.assertEquals(doesTriangleFit([3, 6, 8], [23, 63, 42]), true, \"Hole is too big\")\nTest.assertEquals(doesTriangleFit([3, 6, 8], [1, 10, 8]), false, \"impossible hole\")",
  "title": "Does the Triangle Fit into the Triangular Hole?"
}