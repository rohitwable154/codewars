const divide = require('./code');

describe('Tests', () => {
    test('the tests', () => {
        expect(divide([1, 2, 3, 4, 1, 0, 2, 2], 5)).toEqual([[1, 2], [3], [4, 1, 0], [2, 2]]);
        expect(divide([1, 2, 3, 4, 1, 0, 2, 2], 4)).toEqual([[1, 2], [3], [4], [1, 0, 2], [2]]);
        expect(divide([1, 3, 2, -1, 2, 1, 1, 3, 1], 3)).toEqual([[1], [3], [2, -1, 2], [1, 1], [3], [1]]);
        expect(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 2)).toEqual([[1], [2], [2, -1], [2, 0], [1, 0, 1]]);
        expect(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 3)).toEqual([[1, 2], [2, -1, 2, 0], [1, 0, 1]]);
        expect(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 5)).toEqual([[1, 2, 2, -1], [2, 0, 1, 0, 1]]);
        expect(divide([2, 1, 0, -1, 0, 0, 2, 1, 3], 3)).toEqual([[2, 1, 0, -1, 0, 0], [2, 1], [3]]);
        expect(divide([2, 1, 0, -1, 0, 0, 2, 1, 3], 4)).toEqual([[2, 1, 0, -1, 0, 0, 2], [1, 3]]);
        expect(divide([1, 0, 1, 1, -1, 0, 0], 1)).toEqual([[1, 0], [1], [1, -1, 0, 0]]);
        expect(divide([1, 0, 1, 1, -1, 0, 0], 2)).toEqual([[1, 0, 1], [1, -1, 0, 0]]);
        expect(divide([1, 0, 1, 1, -1, 0, 0], 3)).toEqual([[1, 0, 1, 1, -1, 0, 0]]);
    });
});
