{
  "author_id": "Helen Yu",
  "author_url": "https://edabit.com/user/mNMQvcxKSSvqqMYCH",
  "challenge_id": "RaxaX4wmKKCsrzKwJ",
  "code": "function divide(arr, n) {\n  \n}",
  "difficulty": "Very Hard",
  "instructions": "<p><span>Write a function that divides an array into chunks such that the sum of each chunk is </span><code>&lt;= n</code><span>. Start from the left side of the array and move to the right.</span></p><h3><span>Examples</span></h3><pre><code>divide([1, 2, 3, 4, 1, 0, 2, 2], 5)\n\u279e [[1, 2], [3], [4, 1, 0], [2, 2]]\n\ndivide([1, 0, 1, 1, -1, 0, 0], 1)\n\u279e [[1, 0], [1], [1, -1, 0, 0]]\n\ndivide([2, 1, 0, -1, 0, 0, 2, 1, 3], 3)\n\u279e [[2, 1, 0, -1, 0, 0], [2, 1], [3]]</code></pre><h3><span>Notes</span></h3><ul><li><span>The max of the array will always be smaller than or equal to </span><code>n</code><span>.</span></li><li><span>Use the </span><strong><span>greedy approach</span></strong><span> when solving the problem (e.g. fit as many elements you can into a chunk as long as you satisfy the sum constraint).</span></li></ul>",
  "source_url": "https://edabit.com/challenge/RaxaX4wmKKCsrzKwJ",
  "tags": [
    "arrays",
    "functional_programming"
  ],
  "tests": "Test.assertSimilar(divide([1, 2, 3, 4, 1, 0, 2, 2], 5), [[1, 2], [3], [4, 1, 0], [2, 2]])\nTest.assertSimilar(divide([1, 2, 3, 4, 1, 0, 2, 2], 4), [[1, 2], [3], [4], [1, 0, 2], [2]])\nTest.assertSimilar(divide([1, 3, 2, -1, 2, 1, 1, 3, 1], 3), [[1], [3], [2, -1, 2], [1, 1], [3], [1]])\nTest.assertSimilar(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 2), [[1], [2], [2, -1], [2, 0], [1, 0, 1]])\nTest.assertSimilar(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 3), [[1, 2], [2, -1, 2, 0], [1, 0, 1]])\nTest.assertSimilar(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 5), [[1, 2, 2, -1], [2, 0, 1, 0, 1]])\nTest.assertSimilar(divide([2, 1, 0, -1, 0, 0, 2, 1, 3], 3), [[2, 1, 0, -1, 0, 0], [2, 1], [3]])\nTest.assertSimilar(divide([2, 1, 0, -1, 0, 0, 2, 1, 3], 4), [[2, 1, 0, -1, 0, 0, 2], [1, 3]])\nTest.assertSimilar(divide([1, 0, 1, 1, -1, 0, 0], 1), [[1, 0], [1], [1, -1, 0, 0]])\nTest.assertSimilar(divide([1, 0, 1, 1, -1, 0, 0], 2), [[1, 0, 1], [1, -1, 0, 0]])\nTest.assertSimilar(divide([1, 0, 1, 1, -1, 0, 0], 3), [[1, 0, 1, 1, -1, 0, 0]])",
  "title": "Dividing into Chunks of Maximum Sum N"
}