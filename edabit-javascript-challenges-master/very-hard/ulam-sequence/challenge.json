{
  "author_id": "Matt",
  "author_url": "https://edabit.com/user/BkPgkDQGHm66X4Qai",
  "challenge_id": "CPqdqJ2YidQCy44PR",
  "code": "function ulam(n) {\n  \n}",
  "difficulty": "Very Hard",
  "instructions": "<p><span>The </span><strong><span>Ulam sequence</span></strong><span> starts with:</span></p><pre><code>ulam = [1, 2]</code></pre><p><span>The next number in the sequence is the smallest positive number that is equal to the </span><em><span>sum of 2 distinct numbers</span></em><span> (that are already in the sequence) </span><em><span>exactly one way</span></em><span>. Trivially, this is 3, as there are only 2 numbers in the starting sequence.</span></p><pre><code>ulam = [1, 2, 3]</code></pre><p><span>The next number is 4, which is the sum of 3+1. 4 is also 2+2, but this equation does not count, as the 2 addends have to be distinct.</span></p><pre><code>ulam = [1, 2, 3, 4]</code></pre><p><span>The next number </span><em><span>cannot be</span></em><span> 5, as 5 = 1 + 4, but also 5 = 2 + 3. There should only be one way to make an Ulam number from 2 distinct addends found in the sequence. The next number is 6 (2+4). There are 2 ways to make 7 (1+6 or 3+4), so the next is 8 (2+6). And so on.</span></p><pre><code>ulam = [1, 2, 3, 4, 6, 8, 11, 13, 16, 18, 26, 28, 36, 38, 47, 48, 53, \u2026]</code></pre><p><span>Create a function that takes a number n and returns the nth number in the Ulam sequence.</span></p><h3><span>Examples</span></h3><pre><code>ulam(4) \u279e 4\n\nulam(9) \u279e 16\n\nulam(206) \u279e 1856</code></pre><h3><span>Notes</span></h3><p><span>N/A</span></p>",
  "source_url": "https://edabit.com/challenge/CPqdqJ2YidQCy44PR",
  "tags": [
    "algebra",
    "logic",
    "loops",
    "numbers"
  ],
  "tests": "Test.assertEquals(ulam(4), 4)\nTest.assertEquals(ulam(9), 16)\nTest.assertEquals(ulam(38), 180)\nTest.assertEquals(ulam(99), 688)\nTest.assertEquals(ulam(206), 1856)\nTest.assertEquals(ulam(495), 5597)\nTest.assertEquals(ulam(577), 6782)",
  "title": "Ulam Sequence"
}