/*  

iccanobiF Numbers

The Fibonacci sequence, as you know, is generated by iterative addition of the sum of the last two elements of the sequence to the end of the sequence, starting with [0, 1].

Fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …]
The iccanobiF sequence (see Resources tab for more info) is generated in a similar way — except that the digits of the last two elements should first be reversed, then added together, then added to the sequence. Single-digit numbers are unaffected, so the first 8 elements are identical to the Fibonacci sequence:

iccanobiF = [0, 1, 1, 2, 3, 5, 8, 13]
The next element is the sum of the reverse of 8 (still 8), and the reverse of 13 — 31 (8 + 31 = 39).

iccanobiF = [0, 1, 1, 2, 3, 5, 8, 13, 39]
The next element is 31 + 93 = 124

iccanobiF = [0, 1, 1, 2, 3, 5, 8, 13, 39, 124]
And so on.

Create a function that takes a number n and returns the difference between the nth iccanobiF number and the nth Fibonacci number.




Examples
iccMinusFib(4) ➞ 0
// For all n < 9, the difference is zero.

iccMinusFib(9) ➞ 18

iccMinusFib(18) ➞ 790920

*/






//#############################################################
//#                        MY SOLUTION    1                   #
//#############################################################


function iccMinusFib(n) {
    let fibonacciSum = [0, 1, 1];
    let iccanobifSum = [0, 1, 1];

    while (fibonacciSum.length < n) {
        fibonacciSum.push(
            fibonacciSum[fibonacciSum.length - 1] +
            fibonacciSum[fibonacciSum.length - 2]
        );
    }

    while (iccanobifSum.length < n) {
        if (iccanobifSum.length > 7) {
            iccanobifSum.push(
                parseInt(
                    iccanobifSum[iccanobifSum.length - 1]
                    .toString()
                    .split("")
                    .reverse()
                    .join("")
                ) +
                parseInt(
                    iccanobifSum[iccanobifSum.length - 2]
                    .toString()
                    .split("")
                    .reverse()
                    .join("")
                )
            );
        } else {
            iccanobifSum.push(
                iccanobifSum[iccanobifSum.length - 1] +
                iccanobifSum[iccanobifSum.length - 2]
            );
        }
    }

    return iccanobifSum[n - 1] - fibonacciSum[n - 1];
}





//#############################################################
//#                        MY SOLUTION    2                   #
//#############################################################


function iccMinusFib(n) {
    let fib = [],
        icc = [],
        a = 0,
        b = 1,
        temp = 0,
        c = 0,
        d = 1

    function reverse(param) {
        return Number(param.toString().split('').reverse().join(''))
    }
    for (let i = 0; i <= n; i++) {
        // Fibonacci
        temp = a
        a = a + b
        b = temp
        fib.push(b)
            // iccanobiF
        temp = c
        c = reverse(c) + reverse(d)
        d = temp
        icc.push(d)
    }
    return icc[n - 1] - fib[n - 1]
}




//#############################################################
//#                        MY SOLUTION    3                   #
//#############################################################


function iccMinusFib(num) {
    return generateIcca(num)[num - 1] - generateFib(num)[num - 1]

    function generateFib(num) {
        let fiboArr = [0, 1]
        for (let i = 0; i < num - 1; i++) {
            fiboArr.push(fiboArr[i] + fiboArr[i + 1])
        }
        return fiboArr
    }

    function generateIcca(num) {
        let iccaArr = [0, 1]
        for (let i = 0; i < num - 1; i++) {
            if (i <= 5) {
                iccaArr.push(iccaArr[i] + iccaArr[i + 1])
            } else if (i > 5) {
                iccaArr.push(reverseNumber(iccaArr[i]) + reverseNumber(iccaArr[i + 1]))
            }
        }
        return iccaArr
    }

    function reverseNumber(num) {
        return parseInt(num.toString().split('').reverse().join(''))
    }
}